{"version":3,"sources":["audioClips.js","DrumPad.js","DrumControls.js","DrumMachine.js","App.js","index.js"],"names":["audioClips","soundClip","soundText","DrumPad","letter","pressedPad","padIsPressed","playAudio","stopAudio","id","className","onMouseDown","e","onMouseUp","DrumControls","active","isClicked","audioText","changeAudioText","changePower","changeVolume","volume","onClick","src","alt","type","onChange","target","value","min","max","disabled","DrumMachine","state","setState","status","setTimeout","handleKeyDown","key","toUpperCase","handleKeyUp","Object","keys","includes","audio","Audio","play","document","addEventListener","this","removeEventListener","map","i","React","Component","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.20c76adb.chunk.js","sourcesContent":["export const audioClips = [\n    {\n      \"Q\" : {\n        soundClip: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\",\n        soundText: \"Chord 1\"\n      },\n      \"W\" : {\n        soundClip: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\",\n        soundText: \"Chord 2\"\n      },\n      \"E\" : {\n        soundClip: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\",\n        soundText: \"Chord 3\"\n      },\n  \"A\" : {\n        soundClip: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\",\n        soundText: \"Shaker\"\n      },\n      \"S\" : {\n        soundClip: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\",\n        soundText: \"Open-HH\"\n      },\n  \"D\" : {\n        soundClip: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\",\n        soundText: \"Closed-HH\"\n      },\n  \"Z\" : {\n        soundClip: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\",\n        soundText: \"Punchy-Kick\"\n      },\n  \"X\" : {\n        soundClip: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\",\n        soundText: \"Side-Stick\"\n      },\n  \"C\" : {\n        soundClip: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\",\n        soundText: \"Snare\"\n      }\n    }\n];","import React from 'react';\n\nconst DrumPad = ({letter,pressedPad,padIsPressed,playAudio,stopAudio}) => {\n    return ( \n        <div \n            id={`drum-pad-${letter}`}  \n            className={`drum-pad ${letter === pressedPad && padIsPressed ? 'padPressed' : '' }`} \n            onMouseDown={(e) => playAudio(letter)}\n            onMouseUp={(e) => stopAudio(letter)}\n        >\n            <p id={`pad-text-${ letter}`}  >{letter}</p>\n        </div>\n    )\n}\n\nexport default DrumPad;","import React from 'react';\n\nconst DrumControls = ({active,isClicked,audioText,changeAudioText,changePower,changeVolume,volume}) => {\n  const controlPower = () => {\n    if (active) {\n        changePower(false);\n        changeAudioText('');\n        changeVolume(0);\n    }\n    else {\n        changePower(true);\n        changeAudioText('');\n        changeVolume(20);\n    }\n  }\n\n  const handleVolumeChange = (e) => {\n    changeVolume(e.target.value);\n  }\n  \n  return (\n    <div className=\"button-controls\" >\n      <div id=\"power-box\">Power</div>\n      <div \n        id=\"power-button\" \n        className={`${isClicked ? 'clicked' : ''} ${active ? 'active' : 'inactive'}`} \n        onClick={controlPower}>\n      </div>\n      <div id=\"sound-display\">{audioText}</div>\n      <div className=\"volume-container\">\n        <img\n          className=\"speaker\" \n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Speaker_Icon.svg/2000px-Speaker_Icon.svg.png\" \n          alt=\"speaker\"\n        />\n        <span id=\"volume\" >{volume}</span>\n      </div>\n      <input \n        id=\"volume-bar\" \n        className={!active ? 'disabled' : ''} \n        type=\"range\" \n        onChange={handleVolumeChange} \n        min=\"0\" \n        max=\"100\" \n        value={volume} \n        disabled={!active} \n      />\n    </div>\n  )\n}\n\nexport default DrumControls;","import React from 'react';\n\nimport {audioClips} from './audioClips.js';\n\n// Components\nimport DrumPad from './DrumPad';\nimport DrumControls from './DrumControls';\n\nclass DrumMachine extends React.Component {\n  state = {\n      audioText: '',\n      isClicked: false,\n      padIsPressed: false,\n      pressedPad: '',\n      volume: 20,\n      active: true\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n    document.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    document.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  changeAudioText = (audioText) => {\n    this.setState({\n      audioText\n    })\n  }\n\n  changePower = (status) => {\n    this.setState({\n      active: status,\n      isClicked: true\n    })\n    let state = this;\n    setTimeout(function() {\n      state.setState({\n        isClicked: false\n      })\n    },100);\n  }\n\n  changeVolume =  (volume) => {\n    this.setState({\n      volume\n    })\n  }\n  \n  handleKeyDown = (e) => {\n    let key = e.key.toUpperCase();\n    this.playAudio(key);\n  }\n\n  handleKeyUp = (e) => {\n    let key = e.key.toUpperCase();\n    this.stopAudio(key);\n  }\n\n  playAudio = (key) => {\n    if (this.state.active) {\n      if (Object.keys(audioClips[0]).includes(key)) {\n        let audio = new Audio(audioClips[0][key].soundClip); \n        audio.volume = this.state.volume / 100;        \n        audio.play();\n        this.setState({\n          pressedPad: key,\n          padIsPressed: true,\n          audioText: audioClips[0][key].soundText\n        }); \n      } \n    }\n  }\n\n  stopAudio = (key) => {\n    if (this.state.active) {\n      if (Object.keys(audioClips[0]).includes(key)) {\n        this.setState({\n          padIsPressed: false,\n          pressedPad: ''\n        })\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div \n          id=\"drum-machine\" \n          className=\"container\" \n        >\n        <div className=\"drum-pads\">\n            {Object.keys(audioClips[0]).map((letter,i) => {\n                return (\n                  <DrumPad \n                    key={i} \n                    padIsPressed={this.state.padIsPressed}  \n                    pressedPad={this.state.pressedPad} \n                    playAudio={this.playAudio} \n                    stopAudio={this.stopAudio}\n                    letter={letter}   \n                  />\n                );    \n            })}\n        </div>\n        <DrumControls \n          audioText={this.state.audioText} \n          active={this.state.active} \n          isClicked={this.state.isClicked}\n          changeAudioText={this.changeAudioText} \n          changePower={this.changePower} \n          changeVolume={this.changeVolume}\n          volume={this.state.volume}\n        />\n        </div>\n      </div>      \n    );\n  }\n}\n    \nexport default DrumMachine;","import React from 'react';\n\nimport './App.css';\n\nimport DrumMachine from './DrumMachine';\n\nclass App extends React.Component {\n    render() {\n        return <DrumMachine />;\n    }\n}\n\nexport default App;","// Modules\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}